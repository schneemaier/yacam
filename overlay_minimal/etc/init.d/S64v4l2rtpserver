#!/bin/sh
#
# Start video and camera
#
VIDEO_CAPTURE_SETTINGS=/etc/videocapture_settings.json
ENABLE_AUDIO=0

if [[ -f /etc/yacam.conf ]]; then
	. /etc/yacam.conf
fi

start_v4l2rtsp() {
        if [[ -f /tmp/ap.conf ]]
        then
                echo "AP Mode"
                exit
        fi
	AUTH_PARAMS=""

	if [ "$ENABLE_AUTH" = "1" ]
	then
		AUTH_PARAMS="-U $USERNAME:$PASSWORD"

		# If we have a realm, add it to AUTH_PARAMS
		#if [ ! -z "$HTTP_AUTH_REALM" ]; then
		#	AUTH_PARAMS="-R $HTTP_AUTH_REALM $AUTH_PARAMS"
		#fi
	fi

	# This command includes the ALSA hardware but we are disabling for now
	#/usr/bin/v4l2rtspserver /dev/video3,hw:0,1 > /var/log/v4l2rtspserver.log &

	if ! ps | grep -wq [v]4l2rtspserver; then
		logger -s "Starting v4l2rtspserver"
		DEVICES=""
		VIDNUM=3
		# Loop through devices to see if they're enabled and add them to rtspserver options
		if [[ "$ENABLE_MAIN_RTSP" = "1" ]]
		then
			DEVICES="/dev/video"$VIDNUM
			if [[ "$ENABLE_AUDIO" = "1" ]]
			then
				DEVICES="${DEVICES},hw:0,1"
			fi
			VIDNUM=$((VIDNUM+1))
		fi
		if [[ "$ENABLE_MJPEG" = "1" ]]
		then
			#DEVICES=$DEVICES" /dev/video"$VIDNUM
			#if [[ "$ENABLE_AUDIO" = "1" ]]
			#then
			#	DEVICES="${DEVICES},hw:0,1"
			#fi
			VIDNUM=$((VIDNUM+1))
		fi
		if [[ "$ENABLE_SUB_RTSP" = "1" ]]
		then
			DEVICES=$DEVICES" /dev/video"$VIDNUM
			if [ "$ENABLE_AUDIO" == 1 ]; then
				DEVICES="${DEVICES},hw:0,1"
			fi
		fi
		/usr/bin/v4l2rtspserver $AUTH_PARAMS -A 48000 -C 1 -a S16_LE -l 1 $DEVICES > /dev/null & #> /var/log/v4l2rtspserver.log 2>&1 &
	fi

	# Waiting for v4l2rtpserver to start
	sleep 5

}

case "$1" in
	start)
		start_v4l2rtsp
		;;
	stop)
		killall v4l2rtspserver
		;;
	restart|reload)
		killall v4l2rtspserver
		start_v4l2rtsp
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1
esac

exit $?
